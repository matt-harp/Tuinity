From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: matt-harp <53673965+matt-harp@users.noreply.github.com>
Date: Thu, 2 Jul 2020 19:56:06 -0500
Subject: [PATCH] Stop sponges from getting wet and drain waterlogged blocks on
 explosion


diff --git a/src/main/java/co/chaoticpvp/ChaosConfig.java b/src/main/java/co/chaoticpvp/ChaosConfig.java
index a509f208556d9f7d67168cf055d6069bf4f20a7b..0dcb09959688e76676eef2450cd69b247233e4c2 100644
--- a/src/main/java/co/chaoticpvp/ChaosConfig.java
+++ b/src/main/java/co/chaoticpvp/ChaosConfig.java
@@ -123,13 +123,25 @@ public class ChaosConfig {
     public static boolean disableRandomTntSpread;
 
     private static void disableRandomTntSpread() {
-        disableRandomTntSpread = getBoolean("disable-random-tnt-spread", true);
+        disableRandomTntSpread = getBoolean("tnt.disable-random-spread", true);
     }
 
     public static boolean tntChainReaction;
 
     private static void tntChainReaction() {
-        tntChainReaction = getBoolean("allow-tnt-to-chain-react", false);
+        tntChainReaction = getBoolean("tnt.allow-chain-reactions", false);
+    }
+
+    public static boolean spongesGetWet;
+
+    private static void spongesGetWet() {
+        spongesGetWet = getBoolean("sponges-turn-to-wet-sponge", false);
+    }
+
+    public static boolean tntDrainsWaterloggedBlocks;
+
+    private static void tntDrainsWaterloggedBlocks() {
+        tntDrainsWaterloggedBlocks = getBoolean("tnt.explosion-drains-waterlogged-blocks", true);
     }
 
     // This is an example for adding a new Configuration Value [No section]
diff --git a/src/main/java/net/minecraft/server/BlockSponge.java b/src/main/java/net/minecraft/server/BlockSponge.java
index 9edf937a652a5b463ff049c414f3230bb0ecd9ed..f6a69186d4ff71ab8d86bcf485dc0a5dbb97efc8 100644
--- a/src/main/java/net/minecraft/server/BlockSponge.java
+++ b/src/main/java/net/minecraft/server/BlockSponge.java
@@ -1,5 +1,6 @@
 package net.minecraft.server;
 
+import co.chaoticpvp.ChaosConfig;
 import com.google.common.collect.Lists;
 import java.util.Queue;
 // CraftBukkit start
@@ -30,7 +31,8 @@ public class BlockSponge extends Block {
 
     protected void a(World world, BlockPosition blockposition) {
         if (this.b(world, blockposition)) {
-            world.setTypeAndData(blockposition, Blocks.WET_SPONGE.getBlockData(), 2);
+            if(ChaosConfig.spongesGetWet) // Chaos sponges
+                world.setTypeAndData(blockposition, Blocks.WET_SPONGE.getBlockData(), 2);
             world.triggerEffect(2001, blockposition, Block.getCombinedId(Blocks.WATER.getBlockData()));
         }
 
diff --git a/src/main/java/net/minecraft/server/Explosion.java b/src/main/java/net/minecraft/server/Explosion.java
index 2552f860ff7a25f74e9a0600e58cefe064fac484..42754141b104555a05ee94eba5c20d0eb5495674 100644
--- a/src/main/java/net/minecraft/server/Explosion.java
+++ b/src/main/java/net/minecraft/server/Explosion.java
@@ -1,5 +1,6 @@
 package net.minecraft.server;
 
+import co.chaoticpvp.ChaosConfig;
 import com.google.common.collect.Lists;
 import com.google.common.collect.Maps;
 import com.google.common.collect.Sets;
@@ -15,7 +16,9 @@ import java.util.Set;
 import javax.annotation.Nullable;
 
 // CraftBukkit start
+import org.bukkit.Bukkit;
 import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.craftbukkit.util.BlockStateListPopulator;
 import org.bukkit.event.entity.EntityExplodeEvent;
 import org.bukkit.Location;
 import org.bukkit.event.block.BlockExplodeEvent;
@@ -120,6 +123,13 @@ public class Explosion {
                             if (!iblockdata.isDestroyable()) continue; // Paper
                             Fluid fluid = iblockdata.getFluid(); // Paper
 
+                            // Chaos start
+                            if(iblockdata.hasProperty(BlockProperties.C) && ChaosConfig.tntDrainsWaterloggedBlocks) {
+                                iblockdata = iblockdata.set(BlockProperties.C, false);
+                                world.setTypeAndData(blockposition, iblockdata, 3);
+                            }
+                            // Chaos end
+
                             if (!iblockdata.isAir() || !fluid.isEmpty()) {
                                 float f2 = Math.max(iblockdata.getBlock().getDurability(), fluid.k());
 
